<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysSaleCoinMapper">
    
    <resultMap type="SysSaleCoin" id="SysSaleCoinResult">
        <result property="saleId"    column="sale_id"    />
        <result property="saleNo"    column="sale_no"    />
        <result property="saleTime"    column="sale_time"    />
        <result property="saleUserId"    column="sale_user_id"    />
        <result property="saleSplitType"    column="sale_split_type"    />
        <result property="supportBuyType"    column="support_buy_type"    />
        <result property="saleAmount"    column="sale_amount"    />
        <result property="remainAmount"    column="remain_amount"    />
        <result property="status"    column="status"    />
        <result property="urgentSaleFlg"    column="urgent_sale_flg"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap type="com.ruoyi.common.core.vo.resp.SaleDetailInfoRespVO" id="SaleDetailInfoRespVOResult">
        <result property="saleId"    column="sale_id"    />
        <result property="saleNo"    column="sale_no"    />
        <result property="saleTime"    column="sale_time"    />
        <result property="saleUserId"    column="sale_user_id"    />
        <result property="saleSplitType"    column="sale_split_type"    />
        <result property="supportBuyType"    column="support_buy_type"    />
        <result property="saleAmount"    column="sale_amount"    />
        <result property="status"    column="status"    />
        <result property="urgentSaleFlg"    column="urgent_sale_flg"    />
        <result property="saleUserNickName"     column="nick_name"    />
        <result property="saleUserPhonenumber"  column="phonenumber"  />
        <result property="wechatPayImg"    column="wechat_pay_img"  />
        <result property="alipayImg"       column="alipay_img"      />
        <result property="unionpayAccount" column="unionpay_account"/>
        <result property="unionpayCard"    column="unionpay_card"   />
    </resultMap>

    <sql id="selectSysSaleCoinVo">
        select sale_id, sale_no, sale_time, sale_user_id, sale_split_type, support_buy_type, sale_amount, remain_amount, status, urgent_sale_flg, create_by, create_time, update_by, update_time, remark from sys_sale_coin
    </sql>

    <select id="selectSysSaleCoinList" parameterType="SysSaleCoin" resultMap="SysSaleCoinResult">
        <include refid="selectSysSaleCoinVo"/>
        <where>  
            <if test="saleNo != null  and saleNo != ''"> and sale_no = #{saleNo}</if>
            <if test="saleTime != null "> and sale_time = #{saleTime}</if>
            <if test="saleUserId != null "> and sale_user_id = #{saleUserId}</if>
            <if test="saleSplitType != null  and saleSplitType != ''"> and sale_split_type = #{saleSplitType}</if>
            <if test="supportBuyType != null  and supportBuyType != ''"> and support_buy_type = #{supportBuyType}</if>
            <if test="saleAmount != null "> and sale_amount = #{saleAmount}</if>
            <if test="remainAmount != null "> and remain_amount = #{remainAmount}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="urgentSaleFlg != null  and urgentSaleFlg != ''"> and urgent_sale_flg = #{urgentSaleFlg}</if>
        </where>
    </select>
    
    <select id="selectSysSaleCoinBySaleId" parameterType="Long" resultMap="SysSaleCoinResult">
        <include refid="selectSysSaleCoinVo"/>
        where sale_id = #{saleId}
    </select>
        
    <insert id="insertSysSaleCoin" parameterType="SysSaleCoin" useGeneratedKeys="true" keyProperty="saleId">
        insert into sys_sale_coin(
            <if test="saleNo != null">sale_no,</if>
            <if test="saleUserId != null">sale_user_id,</if>
            <if test="saleSplitType != null">sale_split_type,</if>
            <if test="supportBuyType != null">support_buy_type,</if>
            <if test="saleAmount != null">sale_amount,</if>
            <if test="remainAmount != null">remain_amount,</if>
            <if test="status != null">status,</if>
            <if test="urgentSaleFlg != null">urgent_sale_flg,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="remark != null and remark != ''">remark,</if>
            sale_time,
            create_time
        )values(
            <if test="saleNo != null">#{saleNo},</if>
            <if test="saleUserId != null">#{saleUserId},</if>
            <if test="saleSplitType != null">#{saleSplitType},</if>
            <if test="supportBuyType != null">#{supportBuyType},</if>
            <if test="saleAmount != null">#{saleAmount},</if>
            <if test="remainAmount != null">#{remainAmount},</if>
            <if test="status != null">#{status},</if>
            <if test="urgentSaleFlg != null">#{urgentSaleFlg},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="remark != null">#{remark},</if>
            sysdate(),
            sysdate()
        )
    </insert>

    <update id="updateSysSaleCoin" parameterType="SysSaleCoin">
        update sys_sale_coin
        <set>
            <if test="saleNo != null">sale_no = #{saleNo},</if>
            <if test="saleUserId != null">sale_user_id = #{saleUserId},</if>
            <if test="saleSplitType != null">sale_split_type = #{saleSplitType},</if>
            <if test="supportBuyType != null">support_buy_type = #{supportBuyType},</if>
            <if test="saleAmount != null">sale_amount = #{saleAmount},</if>
            <if test="remainAmount != null">remain_amount = #{remainAmount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="urgentSaleFlg != null">urgent_sale_flg = #{urgentSaleFlg},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate()
        </set>
        where sale_id = #{saleId}
    </update>

    <delete id="deleteSysSaleCoinBySaleId" parameterType="Long">
        delete from sys_sale_coin where sale_id = #{saleId}
    </delete>

    <delete id="deleteSysSaleCoinBySaleIds" parameterType="String">
        delete from sys_sale_coin where sale_id in 
        <foreach item="saleId" collection="array" open="(" separator="," close=")">
            #{saleId}
        </foreach>
    </delete>

    <select id="getSaleList" resultMap="SaleDetailInfoRespVOResult">
        SELECT
            MAIN.sale_id,
            MAIN.sale_no,
            MAIN.sale_time,
            MAIN.sale_user_id,
            MAIN.sale_split_type,
            MAIN.support_buy_type,
            MAIN.sale_amount,
            MAIN.status,
            MAIN.urgent_sale_flg,
            MAIN.nick_name,
            MAIN.phonenumber,
            MAIN.wechat_pay_img,
            MAIN.alipay_img,
            MAIN.unionpay_account,
            MAIN.unionpay_card
        FROM(
            SELECT
                s.sale_id,
                s.sale_no,
                s.sale_time,
                s.sale_user_id,
                s.sale_split_type,
                s.support_buy_type,
                s.sale_amount,
                s.status,
                s.urgent_sale_flg,
                u.nick_name,
                u.phonenumber,
                u.wechat_pay_img,
                u.alipay_img,
                u.unionpay_account,
                u.unionpay_card
            FROM
                sys_user u
            INNER JOIN sys_sale_coin s ON s.sale_user_id = u.parent_user_id
            WHERE u.user_id = #{userId}
            AND s.status = '1'
            <if test="saleAmountFrom != null and saleAmountFrom != 0">
                AND s.sale_amount >= #{saleAmountFrom}
            </if>
            <if test="saleAmountTo != null and saleAmountTo != 0">
                AND s.sale_amount &lt;= #{saleAmountTo}
            </if>
            <if test="saleSplitType != null and saleSplitType != ''">
                AND s.sale_split_type = #{saleSplitType}
            </if>
            <if test="supportBuyType != null and supportBuyType.length >0">
                AND
                <foreach collection="supportBuyType" item="dictCode" open="(" separator="OR" close=")">
                    (s.support_buy_type LIKE CONCAT(CONCAT('%',#{dictCode}),'%'))
                </foreach>
            </if>
            UNION ALL
            SELECT
                s.sale_id,
                s.sale_no,
                s.sale_time,
                s.sale_user_id,
                s.sale_split_type,
                s.support_buy_type,
                s.sale_amount,
                s.status,
                s.urgent_sale_flg,
                u.nick_name,
                u.phonenumber,
                u.wechat_pay_img,
                u.alipay_img,
                u.unionpay_account,
                u.unionpay_card
            FROM
                sys_sale_coin s
            INNER JOIN sys_user u ON s.sale_user_id = u.user_id
            LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
            WHERE s.status = '1'
            AND d.dept_id IN ( SELECT dept_id FROM sys_dept WHERE find_in_set( #{deptId} , ancestors ) )
            <if test="saleAmountFrom != null and saleAmountFrom != 0">
                AND s.sale_amount >= #{saleAmountFrom}
            </if>
            <if test="saleAmountTo != null and saleAmountTo != 0">
                AND s.sale_amount &lt;= #{saleAmountTo}
            </if>
            <if test="saleSplitType != null and saleSplitType != ''">
                AND s.sale_split_type = #{saleSplitType}
            </if>
            <if test="supportBuyType != null and supportBuyType.length >0">
                AND
                <foreach collection="supportBuyType" item="dictCode" open="(" separator="OR" close=")">
                    (s.support_buy_type LIKE CONCAT(CONCAT('%',#{dictCode}),'%'))
                </foreach>
            </if>
        )MAIN
        order by MAIN.sale_id DESC
        <if test="pageNumber != null">
            limit #{pageNumber} , #{pageRowCount}
        </if>
    </select>

    <select id="getMySaleList" resultMap="SaleDetailInfoRespVOResult">
        SELECT
            s.sale_id,
            s.sale_no,
            s.sale_time,
            s.sale_user_id,
            s.sale_split_type,
            s.support_buy_type,
            s.sale_amount,
            s.status,
            s.urgent_sale_flg,
            u.nick_name,
            u.phonenumber,
            u.wechat_pay_img,
            u.alipay_img,
            u.unionpay_account,
            u.unionpay_card
        FROM
            sys_user u
            INNER JOIN sys_sale_coin s ON s.sale_user_id = u.user_id
        WHERE
            u.del_flag = '0'
        and s.sale_user_id = #{userId}
        <if test="status != null and status != ''">
            and s.status = #{status}
        </if>
        order by s.sale_id DESC
        <if test="pageNumber != null">
            limit #{pageNumber} , #{pageRowCount}
        </if>
    </select>
</mapper>